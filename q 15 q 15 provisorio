#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct receitas{
  char nome[25];
  int quant_ingredientes;
};

int main(void) {
  struct receitas a[3];
  char pesquisa[25];
  char ingredientes[100][25];
  //Para cada receita, leia seu nome e a quantidade de ingredientes. Então crie e leia o vetor de ingredientes, sendo que cada ingrediente contém nome e quantidade
  int n = 1;
  int j = 0;
  for(int i = 0; i < 3; i++){
    setbuf(stdin,NULL);
    printf("Digite o nome da receita %d: ",n);
    fgets(a[i].nome,25,stdin);
    printf("Digite a quantidade de ingredientes: ");
    scanf("%d", &a[i].quant_ingredientes);
    printf("\n");
    char ingredientes[a[i].quant_ingredientes][25];
    //Para cada ingrediente, leia o nome e a quantidade
    
    int m = 1;
    while(j < a[i].quant_ingredientes){
      setbuf(stdin,NULL);
      printf("Digite o nome do ingrediente: ");
      fgets(ingredientes[j],25,stdin);
      printf("Digite a quantidade: ");
      scanf("%d", &a[i].quant_ingredientes);
      printf("\n");
      j++;
    }
  }
  //Procure receitas por nome, mostrando seus ingredientes se encontrar. Se não encontrar, informe ao usuário. Repita o processo até digitar uma string vazia.
  printf("Procure uma receita: ");
  fgets(pesquisa,25,stdin);
  while(strcmp(pesquisa, "") != 0){
    int j = 0;
    while(j < 3){
      if(strcmp(pesquisa,a[j].nome) == 0){
        printf("Receita: %s", a[j].nome);
        printf("Ingredientes: ");
        int k = 0;
        while(k < a[j].quant_ingredientes){
          printf("%s", ingredientes[k]);
          k++;
          printf("\n");
        }
      }
      j++;
    }
  }


  return 0;
}
